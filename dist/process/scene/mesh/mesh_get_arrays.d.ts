import { AABB, Vector4 } from "../../../parse/binary/variant";
type F1 = number;
type F2 = [number, number];
type F3 = [number, number, number];
type F4 = [number, number, number, number];
type F8 = [number, number, number, number, number, number, number, number];
type F1A = F1[];
type F2A = F2[];
type F3A = F3[];
type F4A = F4[];
type F8A = F8[];
export type FA = F1A | F2A | F3A | F4A | F8A;
export declare function _get_array_from_surface(p_format: number, p_vertex_data: ArrayBuffer, p_attrib_data: ArrayBuffer | null, p_skin_data: ArrayBuffer | null, p_vertex_len: number, p_index_data: ArrayBuffer | null, p_index_len: number, p_aabb: AABB, p_uv_scale: Vector4): (Uint8Array<ArrayBufferLike>[] | FA)[];
export {};
