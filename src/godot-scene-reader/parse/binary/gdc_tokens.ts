export enum TokenType {
  EMPTY,
  // Basic
  ANNOTATION,
  IDENTIFIER,
  LITERAL,
  // Comparison
  LESS,
  LESS_EQUAL,
  GREATER,
  GREATER_EQUAL,
  EQUAL_EQUAL,
  BANG_EQUAL,
  // Logical
  AND,
  OR,
  NOT,
  AMPERSAND_AMPERSAND,
  PIPE_PIPE,
  BANG,
  // Bitwise
  AMPERSAND,
  PIPE,
  TILDE,
  CARET,
  LESS_LESS,
  GREATER_GREATER,
  // Math
  PLUS,
  MINUS,
  STAR,
  STAR_STAR,
  SLASH,
  PERCENT,
  // Assignment
  EQUAL,
  PLUS_EQUAL,
  MINUS_EQUAL,
  STAR_EQUAL,
  STAR_STAR_EQUAL,
  SLASH_EQUAL,
  PERCENT_EQUAL,
  LESS_LESS_EQUAL,
  GREATER_GREATER_EQUAL,
  AMPERSAND_EQUAL,
  PIPE_EQUAL,
  CARET_EQUAL,
  // Control flow
  IF,
  ELIF,
  ELSE,
  FOR,
  WHILE,
  BREAK,
  CONTINUE,
  PASS,
  RETURN,
  MATCH,
  WHEN,
  // Keywords
  AS,
  ASSERT,
  AWAIT,
  BREAKPOINT,
  CLASS,
  CLASS_NAME,
  CONST,
  ENUM,
  EXTENDS,
  FUNC,
  IN,
  IS,
  NAMESPACE,
  PRELOAD,
  SELF,
  SIGNAL,
  STATIC,
  SUPER,
  TRAIT,
  VAR,
  VOID,
  YIELD,
  // Punctuation
  BRACKET_OPEN,
  BRACKET_CLOSE,
  BRACE_OPEN,
  BRACE_CLOSE,
  PARENTHESIS_OPEN,
  PARENTHESIS_CLOSE,
  COMMA,
  SEMICOLON,
  PERIOD,
  PERIOD_PERIOD,
  COLON,
  DOLLAR,
  FORWARD_ARROW,
  UNDERSCORE,
  // Whitespace
  NEWLINE,
  INDENT,
  DEDENT,
  // Constants
  CONST_PI,
  CONST_TAU,
  CONST_INF,
  CONST_NAN,
  // Error message improvement
  VCS_CONFLICT_MARKER,
  BACKTICK,
  QUESTION_MARK,
  // Special
  ERROR,
  TK_EOF, // "EOF" is reserved
  TK_MAX
};